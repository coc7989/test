pipeline {
    agent any
    environment {
        // Replace with your logic to dynamically determine the master server
        MASTER_SERVER = "master.com" 
    }
    stages {
        stage('Run Remote Commands') {
            steps {
                script {
                    echo "Executing commands on ${MASTER_SERVER}"
                    def remoteOutput = sh(script: """
                        ssh -o LogLevel=ERROR -o BatchMode=yes -o StrictHostKeyChecking=no ${MASTER_SERVER} \
                        'echo Running on remote server: \$(hostname) && pwd && whoami' 2>/dev/null
                    """, returnStdout: true).trim()

                    echo "Remote Output: ${remoteOutput}"
                }
            }
        }
    }
}
