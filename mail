def admin_queue_request():
    if request.method == 'GET':
        REQUEST_STATUS = request.args.get('REQUEST_STATUS')
        site_name = user_sites_mapping.get(userID)
        if REQUEST_STATUS not in ['PENDING', 'COMPLETED']:
            return jsonify({"error": "Invalid Status"}), 400

        # Define table names
        tables = [dbCfg['QUEUE_ACCESS'], dbCfg['SLOT_REQUEST']]

        results = []

        try:
            db = get_db()
            cursor = db.cursor()

            for table_name in tables:
                # Build the query
                if REQUEST_STATUS == 'PENDING':
                    query = f"SELECT * FROM {table_name} WHERE CLUSTER_NAME = :site_name AND REQUEST_STATUS = 'PENDING'"
                else:  # COMPLETED
                    query = f"SELECT * FROM {table_name} WHERE CLUSTER_NAME = :site_name AND REQUEST_STATUS != 'PENDING'"

                cursor.execute(query, {"site_name": site_name})

                # Fetch column names and data
                columns = [f"{table_name}.{col[0]}" for col in cursor.description]  # Prefix with table name
                for row in cursor.fetchall():
                    row_dict = dict(zip(columns, row))
                    results.append(row_dict)

            cursor.close()
            return jsonify(results), 200
        except Exception as e:
            return jsonify({'error': str(e)}), 500
