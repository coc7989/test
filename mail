renderRowActions={({ table, row }) => (
  <Grid2 textAlign={'center'} justifyContent="center" alignItems="center">
    <Button
      size="large"
      sx={{ mx: 1 }}
      color="success"
      disabled={
        table.getSelectedRowModel().flatRows.length > 1 ||
        loadingRows[row.original.REQUEST_ID] ||
        row.original.EXTENSION_FLAG ||
        !(
          row.original.REQUEST_STATUS === 'COMPLETED' &&
          isAccessEndDateInTwoDays(row.original.ACCESS_END_DATE)
        )
      }
      onClick={() => extendClick(row)}
      variant="contained"
    >
      {loadingRows[row.original.REQUEST_ID]
        ? 'Extending...'
        : row.original.EXTENSION_FLAG
        ? 'Extended'
        : 'Extend'}
    </Button>
  </Grid2>
)}

// Utility function to check if the ACCESS_END_DATE is within the next 2 days
function isAccessEndDateInTwoDays(accessEndDate) {
  const today = new Date();
  const accessEnd = new Date(accessEndDate);
  const diffInTime = accessEnd - today;
  const diffInDays = diffInTime / (1000 * 60 * 60 * 24);

  return diffInDays >= 0 && diffInDays <= 2;
}
