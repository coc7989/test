import cx_Oracle
import re
import pandas as pd

# ===== USER CONFIG =====
# Oracle DB connection details
DB_USER = "your_user"
DB_PASSWORD = "your_password"
DB_DSN = "hostname:port/servicename"  # Example: "dbserver:1521/orclpdb1"

# Table and column names
TABLE_NAME = "your_table"
COLUMN_NAME = "command"

# Your tools list
tools_list = [
    "virtuoso", "psf2ascii", "spectre", "hspice",
    "calibre", "icv", "innovus", "genus", "tempus",
    "primetime"
]

# ===== FUNCTIONS =====
def find_tools_in_text(text, tools):
    """Return a set of matching tools from text."""
    matches = set()
    for tool in tools:
        if re.search(r"\b" + re.escape(tool) + r"\b", text, re.IGNORECASE):
            matches.add(tool.lower())
    return matches


# ===== MAIN LOGIC =====
connection = cx_Oracle.connect(DB_USER, DB_PASSWORD, DB_DSN)
cursor = connection.cursor()

cursor.execute(f"SELECT {COLUMN_NAME} FROM {TABLE_NAME}")
rows = cursor.fetchall()

tool_to_commands = {tool.lower(): [] for tool in tools_list}

for row in rows:
    command_str = row[0] or ""
    matches = find_tools_in_text(command_str, tools_list)
    for tool in matches:
        tool_to_commands[tool].append(command_str)

# Convert to DataFrame for nicer output
df = pd.DataFrame(
    [(tool, cmd) for tool, cmds in tool_to_commands.items() for cmd in cmds],
    columns=["Tool", "Command"]
)

# Show in console
print(df)

# Optionally save to CSV
df.to_csv("tool_command_mapping.csv", index=False)

# Cleanup
cursor.close()
connection.close()
