tThanks ‚Äî this confirms you're explicitly using a host bind mount in your Jenkins job:

-v /data/lsf_ued/logs:/app/logs

This is the exact reason you're seeing the UID mismatch inside the container ‚Äî Docker mounts the host directory /data/lsf_ued/logs as-is, including the owner UID/GID (59218 in your case), and this overrides anything defined in the Dockerfile during image build.


---

‚úÖ Options to Fix This in Your Jenkins Setup

üîß Option 1: Align Container User UID with Host UID (Quick Fix)

If the host's dockeruser has UID 59218, you can modify your Dockerfile like this:

RUN usermod -u 59218 dockeruser

This way, inside the container, UID 59218 resolves to dockeruser, and the directory ownership appears correct even with the volume mount.

> ‚ö†Ô∏è Caveat: This can cause issues if the user already owns files in the image. Best used early in the Dockerfile, before creating/chowning many files.




---

üõ†Ô∏è Option 2: chown the mounted volume at runtime

Since bind mounts override image ownership, you can reclaim it by chowning at container startup.

1. Add an entrypoint.sh:

#!/bin/bash
chown -R dockeruser:dockeruser /app/logs
exec "$@"


2. Update Dockerfile:

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]



This ensures /app/logs is correctly owned regardless of the host UID.

> ‚úÖ Requires container to run as root, or at least have permission to chown the mounted folder.




---

üîÅ Option 3: Use a Named Volume Instead (If Host Mapping Is Not Needed)

If /data/lsf_ued/logs is not required to persist or be readable by the host, switch your Jenkins command to:

docker run -d -v logs-volume:/app/logs --name ${DEV_IMAGE_NAME} \
  -e BRANCH_NAME=dev -p 5000:5000 ${DEV_IMAGE_NAME}:${GIT_COMMIT}

And pre-create the volume (optional):

docker volume create logs-volume

This avoids all permission issues.


---

üß© Recommendation Based on Your Use Case

Do you need host access to logs?	Suggested Fix

‚úÖ Yes	Use Option 1 (UID match) or Option 2 (entrypoint chown)
‚ùå No	Use Option 3 (named volume)


Let me know your preference, and I‚Äôll tailor the Dockerfile or Jenkins pipeline command accordingly.

