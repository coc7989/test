from fastapi import FastAPI
from pydantic import BaseModel
from typing import Optional

app = FastAPI(title="Slurm Dashboard API (Dummy Mode)")

class Job(BaseModel):
    job_id: int
    name: str
    user: str
    state: str
    partition: str
    elapsed: str
    reason: Optional[str] = None

# Dummy dataset
DUMMY_JOBS = [
    {
        "job_id": 101,
        "name": "train_model",
        "user": "alice",
        "state": "RUNNING",
        "partition": "gpu",
        "elapsed": "01:23:45",
        "reason": None,
    },
    {
        "job_id": 102,
        "name": "data_prep",
        "user": "alice",
        "state": "PENDING",
        "partition": "cpu",
        "elapsed": "00:00:00",
        "reason": "Resources",
    },
    {
        "job_id": 103,
        "name": "sim_analysis",
        "user": "bob",
        "state": "FAILED",
        "partition": "cpu",
        "elapsed": "00:12:09",
        "reason": "Error",
    },
    {
        "job_id": 104,
        "name": "postprocess",
        "user": "alice",
        "state": "COMPLETED",
        "partition": "gpu",
        "elapsed": "02:01:10",
        "reason": None,
    },
]

@app.get("/myjobs", response_model=list[Job])
def get_my_jobs(user: str):
    """Return dummy jobs for the given user."""
    return [Job(**job) for job in DUMMY_JOBS if job["user"] == user]
