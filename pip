pipeline {
    agent any
    
    environment {
        buildNum = 'be2cdcc8-66c8-431e-8be7-d106ccd5cc6a'
        mappedlicense = 'cds.fllvflamesai.lic'
        backupFile = "${mappedlicense}.${buildNum}"
        vendor = 'cdslmd'
    }
    
    stages {
        stage('Copy File') {
            steps {
                script {
                    sh "rsync -v /opt/license_files/${buildNum}/current/${mappedlicense} /home/flames/data/history/${backupFile}"
                    sh "rsync -v /opt/license_files/${buildNum}/current/${mappedlicense} fllv.com:/tmp/${backupFile}"
                    sh "rsync -v /opt/license_files/${buildNum}/updated/${mappedlicense} /home/flames/data/."
                    sh "rsync -v /opt/license_files/${buildNum}/updated/${mappedlicense} fllv.com:/home/flames/data/."
                }
            }
        }
        stage('Execute SSH Commands') {
            steps {
                script {
                    def counter = 0
                    sshScript = '''
                    while [ $counter -lt 2 ]; do
                        if [ $(( $(date +%s) - $(stat -c %Y /home/flames/data/${mappedlicense}) )) -lt 120 ]; then
                            lmreread=$(/home/flames/vendors/cds/pgms.linux/lmreread -c /home/flames/data/${mappedlicense})
                            reread_status=$(echo "$lmreread" | grep -o "lmreread successful")
                            lmstat=$(/home/flames/vendors/cds/pgms.linux/lmstat -c /home/flames/data/${mappedlicense})
                            vendor_status=$(echo "$lmstat" | grep -o "${vendor}: [^ ]*" | awk '{print $NF}')
                            
                            if [[ $reread_status == "lmreread successful" && $lmstat == "UP" ]]; then
                                echo "lmreread was successful"
                            else
                                echo "lmreread failed or not successful"
                                rsync -avz /history/${backupFile} /.
                            fi
                        else
                            echo 'File copy failed or timestamp is not recent'
                            exit 1
                        fi
                        ((counter++))  # Increment counter
                    done
                    '''
                    sh "ssh -tt fllv.com '/bin/bash' << 'EOF'\n${sshScript}\nEOF"
                }
            }
        }
    }
}
