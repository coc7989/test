Got it — if you want to use plain file writing instead of Python's logging module, you can manage two separate log files manually: one for cron jobs, and one for API route logs.

Here’s how to set it up cleanly:


---

1. Utility Functions for Logging

Create a logger_utils.py file (or keep in your main file) with:

import os
from datetime import datetime
import platform

# Set base log directory cross-platform
if platform.system() == 'Windows':
    BASE_LOG_DIR = 'C:\\log'
else:
    BASE_LOG_DIR = '/var/log/my_app'  # or '/home/youruser/logs'

os.makedirs(BASE_LOG_DIR, exist_ok=True)

CRON_LOG_FILE = os.path.join(BASE_LOG_DIR, 'cron_jobs.log')
API_LOG_FILE = os.path.join(BASE_LOG_DIR, 'api_errors.log')


def write_to_cron_log(message):
    _write_to_file(CRON_LOG_FILE, message)


def write_to_api_log(message):
    _write_to_file(API_LOG_FILE, message)


def _write_to_file(filepath, message):
    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    with open(filepath, 'a') as f:
        f.write(f"[{timestamp}] {message}\n")


---

2. Use in Cron Jobs

from logger_utils import write_to_cron_log

def scheduled_database_removal_query():
    write_to_cron_log("Job started: daily_database_removal_query")
    try:
        # Your logic here
        write_to_cron_log("Completed processing successfully")
    except Exception as e:
        write_to_cron_log(f"Job failed with error: {e}")


---

3. Use in Flask API

Wrap your routes or use @app.errorhandler:

from flask import Flask, jsonify
from logger_utils import write_to_api_log

app = Flask(__name__)

@app.route('/example')
def example():
    try:
        # API logic here
        return jsonify({'status': 'success'})
    except Exception as e:
        write_to_api_log(f"API /example failed with error: {e}")
        return jsonify({'error': 'Something went wrong'}), 500

You can also globally catch unhandled exceptions in Flask like this:

@app.errorhandler(Exception)
def handle_exception(e):
    write_to_api_log(f"Unhandled exception: {str(e)}")
    return jsonify({'error': 'Internal server error'}), 500


---

Would you like to add log rotation (e.g. daily log files) or is a single growing log file okay for now?

