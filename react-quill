pipeline {
    agent any
    stages {
        stage('Process Job Info') {
            steps {
                script {
                    // Define job IDs
                    def job_ids = "689431,948400,1200"

                    // Convert job IDs to a regular expression pattern
                    def job_ids_pattern = job_ids.split(',').join('|')

                    // Execute shell command to get the output
                    def output = sh(
                        script: """
                            /data/lsf/mbjobs2 | grep PEND | cut -d "," -f 2,15,16,17,23 | grep -E '${job_ids_pattern}'
                        """,
                        returnStdout: true
                    ).trim()

                    // Print the output for debugging
                    println("Output: ${output}")

                    // Initialize the final result list
                    def final_result = []

                    // Process each line of the output
                    output.eachLine { line ->
                        // Split the line into parts
                        def parts = line.split(',')

                        // Extract and assign values
                        def que_name = parts[1].toUpperCase() == "GUI" ? "GUI" : "ws"
                        def os_name = (parts[2] =~ /\[([^\]]+)\]/)[0][1]
                        def num_of_core = parts[3].toInteger()
                        def other_info = parts[4].toInteger()

                        // Add the extracted values to the final result
                        final_result << [
                            "que_name"   : que_name,
                            "os_name"    : os_name,
                            "num_of_core": num_of_core,
                            "other_info" : other_info
                        ]
                    }

                    // Print the final result for debugging
                    println("Final Result: ${final_result}")
                }
            }
        }
    }
}
