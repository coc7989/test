pipeline {
    agent any
    stages {
        stage('Process Job Info') {
            steps {
                script {
                    // Define job_id
                    def job_id = 689431

                    // Execute shell command to get the output
                    def output = sh(
                        script: """
                            /data/lsf/mbjobs2 | grep PEND | cut -d "," -f 2,15,16,17,23 | grep $job_id
                        """,
                        returnStdout: true
                    ).trim()

                    // Print the output for debugging
                    println("Output: ${output}")

                    // Split the output into parts
                    def parts = output.split(',')

                    // Extract and assign values
                    def que_name = parts[1].toUpperCase() == "GUI" ? "GUI" : "ws"
                    def os_name = (parts[2] =~ /\[([^\]]+)\]/)[0][1]
                    def num_of_core = parts[3]
                    def other_info = parts[4]

                    // Construct the final result as a list of maps
                    def final_result = [
                        [
                            "que_name"  : que_name,
                            "os_name"   : os_name,
                            "num_of_core": num_of_core.toInteger(),
                            "other_info": other_info.toInteger()
                        ]
                    ]

                    // Print the final result for debugging
                    println("Final Result: ${final_result}")
                }
            }
        }
    }
}
