tGreat point â€” hardcoding emails like lsfued@list.tf.com and rajath@tf.com makes the code less flexible and harder to maintain.

To avoid hardcoding, you can do the following:


---

âœ… Step 1: Add Parameters to Your Pipeline

Modify your Jenkins pipeline to accept these email addresses as parameters (either through params or as environment variables).

Example:

properties([
  parameters([
    string(name: 'SUPPORT_EMAIL', defaultValue: 'lsfued@list.tf.com', description: 'Support contact email'),
    string(name: 'ESCALATION_EMAIL', defaultValue: 'rajath@tf.com', description: 'Escalation contact email')
  ])
])


---

âœ… Step 2: Update the Email Body to Use Parameters

Modify your sendSuccessEmail() function to use those parameter values instead of hardcoded emails.

ðŸ”§ Replace this:

<a href="mailto:lsfued@list.tf.com">lsfued@list.tf.com</a>

âœ… With this:

<a href="mailto:${params.SUPPORT_EMAIL}">${params.SUPPORT_EMAIL}</a>

ðŸ”§ And this:

<a href="mailto:rajath@tf.com">rajath@tf.com</a>

âœ… With this:

<a href="mailto:${params.ESCALATION_EMAIL}">${params.ESCALATION_EMAIL}</a>


---

âœ… Final Section (Modified Email Footer)

Here's how your email footer would look dynamically:

htmlBody += """
<hr style="border:none; border-top:1px solid #ccc;"/>
<p style="font-size:14px; color:#333;">For any issues, contact:</p>
<p style="font-size:14px; color:#555;">
<a href="mailto:${params.SUPPORT_EMAIL}">${params.SUPPORT_EMAIL}</a>
</p>
<p style="font-size:14px; color:#333;">For any escalation, contact:</p>
<p style="font-size:14px; color:#555;">
<a href="mailto:${params.ESCALATION_EMAIL}">${params.ESCALATION_EMAIL}</a>
</p>
"""


---

âœ… Benefits:

You can change recipients without editing code.

Works great for different teams or environments (dev, prod).

Encourages DRY (Donâ€™t Repeat Yourself) practices.



---

Let me know if you also want to support multiple escalation contacts or pull them from a config file or Jenkins shared library.

