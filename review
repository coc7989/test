yimport subprocess
import smtplib
from collections import defaultdict
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime

# Configuration
SMTP_SERVER = "your.smtp.server.com"
SMTP_PORT = 25
FROM_EMAIL = "lsf-alerts@fc.com"

# List of problematic hosts
hosts = [
    "linbrxm01", "linbrxn01", "linbrxn06", "linbrxo03", "lincasc04",
    "lincasc09", "lincasc14", "lincase05", "lincasg01", "lincasg12", "lincash06"
]

user_data = defaultdict(lambda: defaultdict(list))

# Collect job info per user on affected hosts
for host in hosts:
    print(f"Processing host: {host}")
    try:
        result = subprocess.run(
            ["bjobs", "-w", "-u", "all", "-m", host],
            capture_output=True,
            text=True,
            check=False
        )
        lines = result.stdout.strip().splitlines()
        if len(lines) <= 1:
            continue  # No jobs

        for line in lines[1:]:  # Skip header
            parts = line.split()
            if len(parts) < 2:
                continue
            job_id, user = parts[0], parts[1]
            user_data[user][host].append(job_id)
    except Exception as e:
        print(f"Error processing host {host}: {e}")

# Prepare log file
log_file = "all_user_messages.txt"
with open(log_file, "w") as f_log:

    # Email each user
    for user, hosts_jobs in user_data.items():
        to_email = f"{user}@fc.com"

        # Create email body
        html_body = f"""
        <p>Hi {user},</p>
        <p>We have detected that some of your jobs are currently running on host(s) experiencing hardware issues. These jobs may not complete successfully or could get corrupted.</p>
        <p><b>Affected Host(s) and Job ID(s):</b></p><ul>
        """

        for host, job_ids in hosts_jobs.items():
            html_body += f"<li><b>Host:</b> {host}<br><b>Jobs:</b> {' '.join(job_ids)}</li>"

        html_body += """
        </ul>
        <p>To avoid any potential issues, we are planning to terminate these jobs. We recommend re-submitting them so they are scheduled on a healthy host, ensuring your work proceeds without impact. Our team is actively working to restore the affected host(s).</p>
        <p>If any of the affected jobs are critical and nearing completion (e.g., expected to finish in the next day or two), please let us know as soon as possible so we can evaluate the best course of action.</p>
        <p>We will wait until the end of the day (EOD) for your response. If we do not hear back from you, the jobs will be terminated by default to prevent further risk.</p>
        <p>Please donâ€™t hesitate to reach out if you need any assistance.</p>
        <p>Thanks,<br>LSF Team</p>
        """

        try:
            # Compose email
            msg = MIMEMultipart()
            msg['From'] = FROM_EMAIL
            msg['To'] = to_email
            msg['Subject'] = "[Action Required]: Jobs Running on Host with Hardware Issues"
            msg.attach(MIMEText(html_body, "html"))

            # Send email
            server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
            server.sendmail(FROM_EMAIL, to_email, msg.as_string())
            server.quit()

            # Log the email sent
            f_log.write(f"{datetime.now().isoformat()} - Email sent to: {to_email}\n")
            print(f"Email sent to: {to_email}")
        except Exception as e:
            print(f"Failed to send email to {to_email}: {e}")
            f_log.write(f"{datetime.now().isoformat()} - Failed to send to {to_email}: {e}\n")
