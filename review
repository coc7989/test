yTo transfer the cx_Oracle package from one server (where it's already installed) to another server (where direct installation is blocked), you can manually copy the installed package directory or create a portable archive. Here's how you can do it step-by-step:


---

✅ Option 1: Copy the Installed Package Directory (Simple)

1. Find where cx_Oracle is installed on the working server:

python -c "import cx_Oracle; print(cx_Oracle.__file__)"

This might return something like:

/usr/local/lib/python3.10/site-packages/cx_Oracle/__init__.py


2. Copy the entire cx_Oracle directory: Navigate to the parent directory (likely site-packages) and copy the whole cx_Oracle folder:

cd /usr/local/lib/python3.10/site-packages/
tar czvf cx_oracle.tar.gz cx_Oracle


3. Transfer the archive to the target server: Use scp or another secure transfer method:

scp cx_oracle.tar.gz user@target_server:/tmp/


4. Extract it to the Python site-packages directory on the target server:

tar xzvf /tmp/cx_oracle.tar.gz -C /path/to/python/site-packages/

You can find the correct site-packages directory with:

python -m site


5. Verify the installation: On the second server, try importing it:

python -c "import cx_Oracle; print(cx_Oracle.__version__)"




---

✅ Option 2: Use pip download and install offline

If you still have access to pip in a different environment (e.g., your first server or a local machine), use:

1. Download the package and dependencies:

mkdir cx_oracle_pkg
pip download cx_Oracle -d cx_oracle_pkg


2. Transfer the folder to the second server:

scp -r cx_oracle_pkg user@target_server:/tmp/


3. Install offline using pip:

pip install --no-index --find-links=/tmp/cx_oracle_pkg cx_Oracle



> ⚠️ Important: cx_Oracle depends on Oracle Instant Client libraries. Make sure these are installed and in your LD_LIBRARY_PATH on both servers:



export LD_LIBRARY_PATH=/opt/oracle/instantclient:$LD_LIBRARY_PATH


---

Would you like help checking whether the Instant Client is set up correctly as well?

