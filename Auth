trigger_compare_pipeline_bp = Blueprint('trigger_compare_pipeline_bp', __name__)

@trigger_compare_pipeline_bp.route('/process_compare_output', methods=["POST"])
@cross_origin()
def process_compare_output():
    try:
        session_id = request.form.get('SESSION_ID')
        if session_id:
            with app.test_request_context():
                request.cookies = {app.session_cookie_name: session_id}
                session_interface = app.session_interface
                session_data = session_interface.open_session(app, request)
                data = request.get_json()
                
                session_data['compareData'] = data.get("compareData")
                compareData = session_data['compareData']
                session_data['featureData'] = data.get("featureData")
                featureData = session_data['featureData']

                session_interface.save_session(app, session_data, request, response=None)

                return jsonify({'compareData': compareData, "featureData": featureData}), 200
        else:
            raise ValueError("Session ID not provided")
    except Exception as e:
        print("error", e)
        return jsonify({'error': str(e)}), 500

@trigger_compare_pipeline_bp.route('/trigger_compare_pipeline', methods=["POST"])
@cross_origin()
def trigger_compare_pipeline():
    try:
        req_id = session.get('req_id')
        mappedlicense = session.get('mappedlicense')
        
        JENKINS_USERNAME = os.getenv("JENKINS_USERNAME")
        JENKINS_PASSWORD = os.getenv("JENKINS_PASSWORD")

        session_id = request.cookies.get(app.session_cookie_name)

        response = requests.post(
            "https://jenkins.com/job/flames/buildWithParameters", 
            auth=(JENKINS_USERNAME, JENKINS_PASSWORD),
            params={
                "BUILD_NUMBER": req_id,
                "mappedlicense": mappedlicense,
                "SESSION_ID": session_id
            }
        )

        compareData = session.get('compareData', '')
        featureData = session.get('featureData', '')

        return jsonify({'compareData': compareData, "featureData": featureData}), 200

    except Exception as e:
        print(e)
        return jsonify({'errorCompare': 'File Comparison Failed'}), 500

app.register_blueprint(trigger_compare_pipeline_bp)
