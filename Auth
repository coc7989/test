import os

def calculate_md5sum(file_path):
    # Execute md5sum command and capture output
    md5sum_output = os.popen(f"md5sum {file_path}").read().strip()
    # Extract MD5 checksum from the output
    md5sum = md5sum_output.split()[0]
    return md5sum

def check_file_modification(directory):
    # Dictionary to store the previous MD5 checksums
    previous_checksums = {}

    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.endswith(".lic"):
                file_path = os.path.join(root, file)
                current_checksum = calculate_md5sum(file_path)
                previous_checksum = previous_checksums.get(file_path)

                if previous_checksum is None:
                    # First time encountering this file, store its checksum
                    previous_checksums[file_path] = current_checksum
                elif current_checksum != previous_checksum:
                    # File content has been modified
                    print(f"File '{file_path}' has been modified.")
                    # Perform your operation here
                    # Example operation: Rename the file
                    os.rename(file_path, file_path + ".bak")
                    # Update the stored checksum
                    previous_checksums[file_path] = current_checksum

if __name__ == "__main__":
    directory = "/home/flames/data"
    check_file_modification(directory)
