âœ… Updated Approach: Show Dialog Immediately on PG_DATE Selection

To meet your requirements:

1. Trigger the dialog box as soon as the user selects a PG_DATE that is beyond 2 weeks.


2. Display a strict message in the dialog stating that priority queue is only allowed for dates within 2 weeks and provide an email ID for urgent cases.


3. On closing the dialog, reset the PG_DATE to today's date.




---

ðŸ’¡ Code Changes:

âœ… 1. Add State and Dialog Logic:

const [openPGDialog, setOpenPGDialog] = useState(false);
const today = dayjs();
const twoWeeksLater = today.add(14, "days");

// Function to handle dialog close
const handlePGDialogClose = () => {
  setOpenPGDialog(false);
  setValue("PG_DATE", today.format("YYYY-MM-DD"));  // Reset to today's date
};


---

âœ… 2. Modify PG_DATE Handling Logic:

Add a watch() to monitor the PG_DATE field.

As soon as the user selects a date, check if itâ€™s beyond 2 weeks and trigger the dialog.


const selectedPGDate = watch("PG_DATE");

// Trigger dialog immediately when date is beyond 2 weeks
useEffect(() => {
  if (selectedPGDate) {
    const pgDate = dayjs(selectedPGDate);
    if (pgDate.isAfter(twoWeeksLater)) {
      setOpenPGDialog(true);
    }
  }
}, [selectedPGDate, twoWeeksLater]);


---

âœ… 3. Add the Dialog Component with Updated Message:

<Dialog open={openPGDialog} onClose={handlePGDialogClose}>
  <DialogTitle>Priority Queue Restriction</DialogTitle>
  <DialogContent>
    <Typography>
      **Priority queue requests are only allowed if your PG date is within the next 2 weeks.**  
      If you have an urgent need, please send an email to:  
      <strong>support@example.com</strong>.
    </Typography>
  </DialogContent>
  <DialogActions>
    <Button onClick={handlePGDialogClose}>OK</Button>
  </DialogActions>
</Dialog>


---

âœ… Explanation of Changes:

1. Immediate Dialog Trigger:

The useEffect() hook monitors PG_DATE with watch() and triggers the dialog as soon as a date beyond 2 weeks is selected.



2. Strict Message:

The dialog message clearly states that priority queue is only allowed for dates within 2 weeks.

It provides an email ID for urgent cases.



3. Date Reset on Dialog Close:

On closing the dialog, the PG_DATE is reset to today's date using:


setValue("PG_DATE", today.format("YYYY-MM-DD"));




---

ðŸ’¡ Optional: Snackbar Notification

If you want to notify the user after resetting the date, you can display a snackbar:

const handlePGDialogClose = () => {
  setOpenPGDialog(false);
  setValue("PG_DATE", today.format("YYYY-MM-DD"));
  setSnackbarSeverity("info");
  setSnackbarMessage("PG date reset to today's date.");
  setOpenSnackbar(true);
};

âœ… Let me know if you need further modifications or refinements!



const onSubmit = async (data) => {
  setIsSubmitting(true);

  // Check PG_DATE when queue is priority
  if (data.QUEUE === "priority") {
    const selectedDate = dayjs(data.PG_DATE);
    if (selectedDate.isAfter(twoWeeksLater)) {
      setOpenPGDialog(true);   // Show dialog if PG_DATE > 2 weeks
      setIsSubmitting(false);
      return;
    }
  }

  // Continue with the submission logic
  data.REQUEST_STATUS = "PENDING";
  data.USER_AID = userID;
  data.SUBMISSION_DATE = today.format("YYYY-MM-DD");

  try {
    const response = await apiInstance.post("/queue_request", data);
    if (response.status === 200) {
      setSnackbarSeverity("success");
      setSnackbarMessage("Request submitted successfully!");
      setOpenSnackbar(true);
      handleReset();
    }
  } catch (error) {
    console.error("Submission failed:", error);
    setSnackbarSeverity("error");
    setSnackbarMessage("Failed to submit request. Please try again.");
    setOpenSnackbar(true);
  } finally {
    setIsSubmitting(false);
  }
};

