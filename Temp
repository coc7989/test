#!/bin/bash

# Variables and input validation
vendor="$1"
mappedlicense="$2"
backupFile="$3"
buildNum="$4"

if [[ $# -lt 4 ]]; then
    echo "Usage: $0 <vendor> <mappedlicense> <backupFile> <buildNum>"
    exit 1
fi

ansoftlog="${mappedlicense/.lic/.lmgrd.log}"
CRON_FILE="/data/mycron"
BACKUP_DIR="/tmp"
LICENSE_DIR="/data"
VENDORS_DIR="/vendors"
encountered_issue=false
result=""
first_error=""

# Functions
function update_license() {
    rsync -v "$BACKUP_DIR/$backupFile" "$LICENSE_DIR/$mappedlicense"
}

function log_issue() {
    local message="$1"
    echo "$message"
    echo "Backup file when issue: ${backupFile}"
    echo "Mapped license when issue: ${mappedlicense}"
}

# Vendor-specific operations
function process_vendor_cds() {
    lmreread=$($VENDORS_DIR/cds/pgms.linux/lmreread -c "$LICENSE_DIR/$mappedlicense")
    sleep 5
    lmstat=$($VENDORS_DIR/cds/pgms.linux/lmstat -c "$LICENSE_DIR/$mappedlicense")
}

function process_vendor_snps() {
    lmreread=$($VENDORS_DIR/snps/pgms.linux/lmreread -c "$LICENSE_DIR/$mappedlicense")
    /bin/restart_server "$vendor"
    sleep 5
    lmstat=$(/bin/lmstat -c "$LICENSE_DIR/$mappedlicense" -a)
}

function process_vendor_ansoft() {
    $VENDORS_DIR/ansys/shared_files/licensing/linx64/ansysli_server -k stop
    sleep 10
    $VENDORS_DIR/ansys/shared_files/licensing/linx64/ansysli_server
    sleep 50
    tail -n 10 "/annals/$ansoftlog"
    lmreread="lmreread successful"
    lmstat=$(/bin/lmstat -c "$LICENSE_DIR/$mappedlicense")
}

# Main loop and logic
crontab -l > "$CRON_FILE"
sed -i "/check_daemon_prs/s/^/#/" "$CRON_FILE"

counter=0
while [[ $counter -lt 2 ]]; do
    if [[ $(( $(date +%s) - $(stat -c %Y "$LICENSE_DIR/$mappedlicense") )) -lt 120 ]]; then
        case $vendor in
            cds) process_vendor_cds ;;
            snps) process_vendor_snps ;;
            ansoft) process_vendor_ansoft ;;
            *) log_issue "Unknown vendor" && update_license && encountered_issue=true && break ;;
        esac

        # Check results
        reread_status=$(echo "$lmreread" | grep -o "lmreread successful")
        vendor_status=$(echo "$lmstat" | grep -o ': UP' | awk '{print $2}' | head -n 1)

        if [[ $reread_status == "lmreread successful" && $vendor_status == "UP" ]]; then
            result="Success"
            break
        else
            log_issue "lmreread Unsuccessful or vendor is not UP"
            update_license
            encountered_issue=true
        fi
    else
        log_issue "License file is not synced properly to the server"
        update_license
        encountered_issue=true
    fi
    ((counter++))
done

# Final result and cleanup
[[ $encountered_issue == true ]] && result="Failure"
echo "${first_error:-$result}"

sed -i "/check_daemon_prs/s/^#//" "$CRON_FILE"
crontab "$CRON_FILE"
