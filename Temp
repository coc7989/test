pipeline {
    agent any

    environment {
        CONFIG_PATH = '/tmp/groups'
        CONFIG_FILE_OPTIONS = [
            '12': 'gui_12slots_grp',
            '16': 'gui_16slots_grp',
            '32': 'gui_32slots_grp',
            '40': 'gui_40slots_grp'
        ]
        CONFIG_FILE = ""
    }

    parameters {
        string(name: 'SLOT_NAME', description: 'Enter the Slot Name')
    }

    stages {
        stage('Config File') {
            steps {
                script {
                    echo "Get Config File --"

                    try {
                        def slotName = params.SLOT_NAME
                        if (env.CONFIG_FILE_OPTIONS.containsKey(slotName)) {
                            env.CONFIG_FILE = env.CONFIG_FILE_OPTIONS[slotName]
                            echo "Selected config file: ${env.CONFIG_FILE}"
                        } else {
                            error "Invalid Slot Name: ${slotName}"
                        }
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        error "Failed to get config file: ${e.message}"
                    }
                }
            }
        }
    }
}
