stage('Get Current Slots Limit from blimits or Config Files') {
    steps {
        script {
            echo "----------------Get Current Slots Limit from blimits or Config Files---------------"
            def cmd ="""
                   blimits -u \"${params.USER_ID}\" | grep gui | awk '{\$1=\$1};1' | cut -d ' ' -f 7
                """.trim()
            println "blimit cmd : ${cmd}"
            def blimit_output = sh(script:"blimits -u \"${params.USER_ID}\" | grep gui | awk '{\$1=\$1};1' | cut -d ' ' -f 7",returnStdout: true)
            echo "blimit output: ${blimit_output}"
            def CONFIG_FILE_OPTIONS = [
                  '12': 'gui_12slots_grp',
                  '16': 'gui_16slots_grp',
                  '32': 'gui_32slots_grp',
                  '40': 'gui_40slots_grp'
              ]
            if (blimit_output) {
              echo "I am inside blimit output"
              def current_slot_limit = blimit_output.split("/")[1].trim()
              echo "Extracted current Slots Limit: ${current_slot_limit}"

              if (CONFIG_FILE_OPTIONS.containsKey(current_slot_limit)) {
                  CURRENT_CONFIG_FILE = "${CONFIG_FILE_OPTIONS[current_slot_limit]}"
                  echo "Config File selected based on current slots limit: ${CURRENT_CONFIG_FILE}"
              } else {
                  error "Invalid Slots Limit: ${current_slot_limit}"
              }
            } else {
                echo "No output from blimits for ${params.USER_ID}. Searching config files manually..."

                def keys = CONFIG_FILE_OPTIONS.keySet() as List
                def i = 0
                while (i < keys.size() && !CURRENT_CONFIG_FILE) {
                    def key = keys[i]
                    def configFileName = CONFIG_FILE_OPTIONS[key]
                    def filename = "${env.CONFIG_PATH}/${configFileName}"
                    echo "Checking file: ${filename} for User ID: ${params.USER_ID}"
                    def grepcmd = """
                    grep -w \"${params.USER_ID}\" ${filename}
                    """.trim()
                    println "grepResult cmd : ${grepcmd}"
                    def grepResult = sh(script:"grep -w \"${params.USER_ID}\" ${filename}", returnStatus: true)
                    echo "grep result is ${grepResult}"
                    if (grepResult == 0) {
                        echo "User ID ${params.USER_ID} found in ${filename}. Slot limit: ${key}"
                        CURRENT_CONFIG_FILE = configFileName
                    } else {
                        echo "User ID ${params.USER_ID} not found in ${filename}. Slot limit: ${key}"
                    }
                    i++
                }

                echo "Config File selected based on current slots limit: ${CURRENT_CONFIG_FILE}"
                if (!CURRENT_CONFIG_FILE) {
                    error "User ID ${params.USER_ID} not found in any config file."
                }
            }
        }
    }
}
